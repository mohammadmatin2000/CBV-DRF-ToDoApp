version: "3.8"  # Defines the Docker Compose version

services:
  # =====================================================================================================================
  redis:
    container_name: redis
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning

  # Backend service configuration
  backend:
    build: .  # Specifies the build context (current directory)
    command: >
      bash -c "
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
       gunicorn core.wsgi:application --bind 0.0.0.0:8000
      "
    container_name: todoapp  # Sets a custom name for the backend container

    volumes:
      - ./core:/app  # Mounts the local "core" directory to "/app" inside the container (for persistent data)
      - static_volume:/app/static
      - media_volume:/app/media

    ports:
      - "8000:8000"  # Maps port 8000 on the host to port 8000 in the container

    environment:
      - SECRET_KEY=test  # Defines a temporary secret key for testing (replace in production)
      - DEBUG=false  # Enables Django's debug mode (should be False in production)
      - ALLOWED_HOSTS=localhost,127.0.0.1  # Defines allowed hosts for Django server access

  worker:
    build: .
    command: celery -A core worker --loglevel=info

    volumes:
      - ./core:/app
    depends_on:
      - redis
      - backend



  # =====================================================================================================================

  master:
    image: locustio/locust
    ports:
      - "8089:8089"
    volumes:
      - ./core/locust:/mnt/locust
    command: -f /mnt/locust/locustfile.py --master -H http://backend:8000

  workers:
    image: locustio/locust
    volumes:
      - ./core/locust:/mnt/locust
    command: -f /mnt/locust/locustfile.py --worker --master-host master

  nginx:
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
    restart: always
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/home/app/static
      - media_volume:/home/app/media
# ======================================================================================================================
volumes:
  static_volume:
  media_volume: